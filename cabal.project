index-state: 2024-04-07T00:00:00Z

jobs: $ncpus

if arch(wasm32)
  packages:
    primer
    primer-api
else
  packages:
    primer
    primer-api
    primer-selda
    primer-service
    primer-benchmark

if arch(wasm32)
   package *
     optimization: 2
else
  optimization: 0

benchmarks: True

tests: True

haddock-hoogle:           True
haddock-html:             True
haddock-quickjump:        True
haddock-hyperlink-source: True
haddock-internal:         True

allow-newer:
  , hedgehog-classes:hedgehog
  , hedgehog-classes:pretty-show
  , hedgehog:pretty-show
  , logging-effect:base
  , refined:base
  , refined:deepseq
  , refined:template-haskell
  , refined:aeson
  , these-skinny:base
  , selda:bytestring

package *
  ghc-options: -fwrite-ide-info

package primer
  test-options: "--size-cutoff=32768"

package primer-api
  test-options: "--size-cutoff=32768"

package primer-service
  test-options: "--size-cutoff=32768"

if arch(wasm32)
  package tasty
    flags: -unix

-- We need a newer version of Selda than what's been released to
-- Hackage, plus some GHC 9.6 fixes from a community fork.
source-repository-package
  type: git
  location: https://github.com/guibou/selda
  tag: 54c12169ce8cd46a7b3c698f65cea55e41a13fe6
  subdir: selda
  --sha256: 0q8m8asmb83mpa3j3adlrhc446xif7gv6lql20gv05k33lmbjfhg

source-repository-package
  type: git
  location: https://github.com/guibou/selda
  tag: 54c12169ce8cd46a7b3c698f65cea55e41a13fe6
  subdir: selda-sqlite
  --sha256: 0q8m8asmb83mpa3j3adlrhc446xif7gv6lql20gv05k33lmbjfhg

-- Wasm workarounds.
--
-- We would prefer that these workarounds were not Wasm-dependent;
-- i.e., that we would use the same version of these dependencies
-- whether we're building for Wasm or not. However, we *do* make them
-- Wasm-dependent, because haskell.nix cannot build any of these
-- source-repository-package dependencies, *nor their reverse
-- dependencies*, using Nix while in the Nix development shell.

if arch(wasm32)
  -- Upstream requires `happy` at build time, which doesn't work on Wasm
  -- targets.
  source-repository-package
    type: git
    location: https://github.com/hackworthltd/pretty-show
    tag: 91d119cb0e3c5f7d866589b25158739580c8fc88
    --sha256: sha256-mu8Eq0Sg6nCF8C2sXB6ebZcLhz8TVZAbNMiorA7RVc8=

  -- Upstream supports Wasm, but not yet released to Hackage.
  source-repository-package
    type: git
    location: https://github.com/chessai/semirings
    tag: 2631c542b57abc9bc9e92db273ab8e80ae88048c
    --sha256: sha256-M6zLBUjVFacCyDm4oxjQ0gVn1J0BmKWOy3MFfUzWJN8=

  -- Upstream uses custom setup, which breaks on Wasm.
  source-repository-package
    type: git
    location: https://github.com/cdepillabout/pretty-simple
    tag: 6fb9b281800ad045925c7344ceb9fd293d86c3b9
    --sha256: sha256-1gsYj/iznEUCeQ1f5Xk7w54h9FLJSNrIR9V3p4eaRYk=

  -- Upstream doesn't want to support Wasm while it's "experimental."
  source-repository-package
    type: git
    location: https://github.com/amesgen/splitmix
    tag: 83b906c4bcdc2720546f1779a16eb65e8e12ecba
    --sha256: sha256-sR+Ne56SBzVbPfC7AJeQZn20YDfFwBDpRI873cTm1nU=
