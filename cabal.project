index-state: 2025-01-07T00:00:00Z

jobs: $ncpus

if arch(wasm32)
  packages:
    primer
    primer-api
    primer-miso
else
  packages:
    primer
    primer-api
    primer-miso
    primer-selda
    primer-service
    primer-benchmark

if arch(wasm32)
  haddock-hoogle:           False
  haddock-html:             False
  haddock-quickjump:        False
  haddock-hyperlink-source: False
  haddock-internal:         False
  package *
    optimization: 2
    ghc-options: -fno-external-interpreter
else
  optimization: 0
  haddock-hoogle:           True
  haddock-html:             True
  haddock-quickjump:        True
  haddock-hyperlink-source: True
  haddock-internal:         True
  package *
    ghc-options: -fwrite-ide-info

benchmarks: True

tests: True

allow-newer: servant-openapi3:base, openapi3:*, selda:*, hedgehog:pretty-show, hedgehog-classes:pretty-show, *:time

package primer
  test-options: "--size-cutoff=32768"

package primer-api
  test-options: "--size-cutoff=32768"

package primer-service
  test-options: "--size-cutoff=32768"

if arch(wasm32)
  package tasty
    flags: -unix

-- Protolude upstream doesn't support GHC 9.10, and appears to
-- be dormant.
source-repository-package
  type: git
  location: https://github.com/tomjaguarpaw/protolude
  tag: 57ffd726d9685a862df8c9773f3eb09de2b89594
  --sha256: 1z9z887s4f1wv0pv3njyd8h8zgr2ha89jyvaxz3k5k3rk6h2g1cp

-- We need a newer version of Selda than what's been released to
-- Hackage, plus some GHC 9.6 fixes from a community fork.
source-repository-package
  type: git
  location: https://github.com/novadiscovery/selda
  tag: 2e3dc54d7de8365b3be84da76f08327dc8b40f61
  subdir: selda selda-sqlite
  --sha256: 0fw336sb03sc54pzmkz6jn989zvbnwnzypb9n0ackprymnvh8mym

-- Until a new Hackage release is made which includes
-- https://github.com/dmjio/miso/pull/752
source-repository-package
  type: git
  location: https://github.com/dmjio/miso
  tag: 2b548d48bffb0e8ae28a6cfb886e4afb0d8be37a
  --sha256: sha256-fzDEa8vKXgxPPB+8NDLmhn2Jw1UDZso7e/klwidCfhM=

-- Wasm workarounds.
--
-- We would prefer that these workarounds were not Wasm-dependent;
-- i.e., that we would use the same version of these dependencies
-- whether we're building for Wasm or not. However, we *do* make them
-- Wasm-dependent, because haskell.nix cannot build any of these
-- source-repository-package dependencies, *nor their reverse
-- dependencies*, using Nix while in the Nix development shell.

if arch(wasm32)
  -- Required for TemplateHaskell support on Wasm targets.
  shared: True

  -- Upstream requires `happy` at build time, which doesn't work on Wasm
  -- targets.
  source-repository-package
    type: git
    location: https://github.com/hackworthltd/pretty-show
    tag: 91d119cb0e3c5f7d866589b25158739580c8fc88
    --sha256: sha256-mu8Eq0Sg6nCF8C2sXB6ebZcLhz8TVZAbNMiorA7RVc8=

  -- Upstream supports Wasm, but not yet released to Hackage.
  source-repository-package
    type: git
    location: https://github.com/chessai/semirings
    tag: 2631c542b57abc9bc9e92db273ab8e80ae88048c
    --sha256: sha256-M6zLBUjVFacCyDm4oxjQ0gVn1J0BmKWOy3MFfUzWJN8=

  -- Upstream doesn't want to support Wasm while it's "experimental."
  source-repository-package
    type: git
    location: https://github.com/amesgen/splitmix
    tag: 5f5b766d97dc735ac228215d240a3bb90bc2ff75
    --sha256: sha256-OCrEnjmESxtFHoeb4TCrQN//Oyx/7dKwiRr6P1/AqSk=
