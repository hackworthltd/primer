expected result hash: -7807833428005221563
Edit [RenameDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "main"}) "sayHello"]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 1,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 1,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 375,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 380,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 383,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),CopyPasteSig (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"},383) [SetCursor 383,Move Parent,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),CopyPasteSig (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"},393) [SetCursor 393,Move Parent,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 372,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 401,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 406,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 0,ConstructLam (Just "xs")]]
Edit [CreateDef (ModuleName {unModuleName = "Main" :| []}) (Just "prefix")]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 412,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 412,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 416,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 411,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 428,ConstructPrim (PrimChar 'H')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 429,ConstructCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 432,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 435,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 441,ConstructPrim (PrimChar 'e')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 442,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 449,ConstructPrim (PrimChar 'l')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 450,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 458,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 465,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 472,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 457,ConstructPrim (PrimChar 'l')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 464,ConstructPrim (PrimChar 'o')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 471,ConstructPrim (PrimChar 'o')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 482,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 483,ConstructPrim (PrimChar ',')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 478,ConstructPrim (PrimChar ' ')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 479,ConstructCon ("Builtins" :| [],"Nil")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 486,ConstructAPP,EnterType]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 491,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [CreateDef (ModuleName {unModuleName = "Main" :| []}) (Just "append")]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 494,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 497,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 501,ConstructTForall (Just "\945"),Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 501,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 501,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 508,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 508,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 519,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 516,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 527,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 532,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 524,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 511,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 542,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 0,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 551,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 558,ConstructVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 559,ConstructVar (LocalVarRef (LocalName {unLocalName = "xs"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 410,RenameLam "name"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 552,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 567,ConstructPrim (PrimChar '!')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 568,ConstructRefinedCon ("Builtins" :| [],"Nil")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 493,ConstructLAM (Just "\945")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 493,ConstructLam (Just "xs")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 493,ConstructLam (Just "ys")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 493,ConstructCase]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 493,ConstructVar (LocalVarRef (LocalName {unLocalName = "xs"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 578,ConstructVar (LocalVarRef (LocalName {unLocalName = "ys"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 582,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 589,ConstructVar (LocalVarRef (LocalName {unLocalName = "m"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 580,RenameCaseBinding "xH"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 581,RenameCaseBinding "xT"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 590,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 597,ConstructVar (LocalVarRef (LocalName {unLocalName = "xT"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 598,ConstructVar (LocalVarRef (LocalName {unLocalName = "ys"}))]]
