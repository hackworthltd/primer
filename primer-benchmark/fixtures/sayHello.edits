expected result hash: -5379900332859563588
Edit [RenameDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "main"}) "sayHello"]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 1,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 1,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 365,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 370,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 373,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),CopyPasteSig (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"},373) [SetCursor 373,Move Parent,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),CopyPasteSig (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"},383) [SetCursor 383,Move Parent,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 362,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 391,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),SigAction [SetCursor 396,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 0,ConstructLam (Just "xs")]]
Edit [CreateDef (ModuleName {unModuleName = "Main" :| []}) (Just "prefix")]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 402,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 402,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),SigAction [SetCursor 406,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 401,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 418,ConstructPrim (PrimChar 'H')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 419,ConstructCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 422,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 425,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 431,ConstructPrim (PrimChar 'e')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 432,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 439,ConstructPrim (PrimChar 'l')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 440,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 448,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 455,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 462,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 447,ConstructPrim (PrimChar 'l')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 454,ConstructPrim (PrimChar 'o')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 461,ConstructPrim (PrimChar 'o')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 472,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 473,ConstructPrim (PrimChar ',')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 468,ConstructPrim (PrimChar ' ')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 469,ConstructCon ("Builtins" :| [],"Nil")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 476,ConstructAPP,EnterType]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}),BodyAction [SetCursor 481,ConstructTCon ("Primitives" :| [],"Char")]]
Edit [CreateDef (ModuleName {unModuleName = "Main" :| []}) (Just "append")]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 484,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 487,Delete]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 491,ConstructTForall (Just "\945"),Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 491,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 491,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 498,ConstructArrowL,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 498,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 509,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 506,ConstructTCon ("Builtins" :| [],"List")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 517,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 522,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 514,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 501,ConstructTApp,Move Child1]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),SigAction [SetCursor 532,ConstructTVar "\945"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 0,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 541,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 548,ConstructVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "prefix"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 549,ConstructVar (LocalVarRef (LocalName {unLocalName = "xs"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 400,RenameLam "name"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 542,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 557,ConstructPrim (PrimChar '!')]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "sayHello"}),BodyAction [SetCursor 558,ConstructRefinedCon ("Builtins" :| [],"Nil")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 483,ConstructLAM (Just "\945")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 483,ConstructLam (Just "xs")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 483,ConstructLam (Just "ys")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 483,ConstructCase]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 483,ConstructVar (LocalVarRef (LocalName {unLocalName = "xs"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 568,ConstructVar (LocalVarRef (LocalName {unLocalName = "ys"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 572,ConstructRefinedCon ("Builtins" :| [],"Cons")]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 579,ConstructVar (LocalVarRef (LocalName {unLocalName = "m"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 570,RenameCaseBinding "xH"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 571,RenameCaseBinding "xT"]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 580,InsertRefinedVar (GlobalVarRef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 587,ConstructVar (LocalVarRef (LocalName {unLocalName = "xT"}))]]
Edit [MoveToDef (GlobalName {qualifiedModule = ModuleName {unModuleName = "Main" :| []}, baseName = "append"}),BodyAction [SetCursor 588,ConstructVar (LocalVarRef (LocalName {unLocalName = "ys"}))]]
